openapi: 3.0.1
info:
  title: Olio API
  version: v1
  description: API for accounts, categories, addons, and creations.
servers:
  - url: https://olio-api.chas.ms
  - url: http://localhost:3000
paths:
  /signup:
    post:
      summary: Create an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                registration:
                  type: object
                  properties:
                    username: { type: string }
                    email: { type: string }
                    password: { type: string }
                    password_confirmation: { type: string }
                  required: [username, email, password, password_confirmation]
      responses:
        '201': { description: Created }
        '422': { description: Validation failed }
  /login:
    post:
      summary: Obtain JWT token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username: { type: string }
                password: { type: string }
              required: [username, password]
      responses:
        '200': { description: OK }
        '401': { description: Unauthorized }
  /creations:
    get:
      summary: List creations for current account
      security: [{ bearerAuth: [] }]
      responses:
        '200': { description: OK }
        '401': { description: Unauthorized }
    post:
      summary: Create a creation
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string }
                addons:
                  type: array
                  items: { type: object }
              required: [title]
      responses:
        '201': { description: Created }
        '401': { description: Unauthorized }
  /creations/{id}:
    get:
      summary: Show a creation
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          schema: { type: integer }
          required: true
      responses:
        '200': { description: OK }
        '404': { description: Not found }
    put:
      summary: Update a creation
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          schema: { type: integer }
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string }
                addons:
                  type: array
                  items: { type: object }
      responses:
        '200': { description: OK }
        '404': { description: Not found }
    delete:
      summary: Delete a creation
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          schema: { type: integer }
          required: true
      responses:
        '204': { description: No Content }
        '404': { description: Not found }
  /categories:
    get:
      summary: List categories
      responses:
        '200': { description: OK }
  /categories/{name}:
    get:
      summary: List addons within a category
      parameters:
        - in: path
          name: name
          schema: { type: string }
          required: true
      responses:
        '200': { description: OK }
        '404': { description: Not found }
  /addons:
    get:
      summary: List all categories with embedded addons
      responses:
        '200': { description: OK }
  /me:
    get:
      summary: Current account
      security: [{ bearerAuth: [] }]
      responses:
        '200': { description: OK }
        '401': { description: Unauthorized }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
